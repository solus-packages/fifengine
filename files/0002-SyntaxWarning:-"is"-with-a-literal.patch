From 454a981a777f141db999809944abbc64ed15c41f Mon Sep 17 00:00:00 2001
From: Lucki <Lucki@holarse-linuxgaming.de>
Date: Sat, 23 Nov 2019 01:09:36 +0100
Subject: [PATCH] SyntaxWarning: "is" with a literal.

Did you mean "=="?
---
 .../extensions/pychan/widgets/animationicon.py   |  2 +-
 .../fife/extensions/pychan/widgets/curvegraph.py |  2 +-
 .../fife/extensions/pychan/widgets/linegraph.py  |  2 +-
 .../fife/extensions/pychan/widgets/pointgraph.py |  2 +-
 .../fife/extensions/pychan/widgets/widget.py     | 16 ++++++++--------
 5 files changed, 12 insertions(+), 12 deletions(-)

diff --git a/engine/python/fife/extensions/pychan/widgets/animationicon.py b/engine/python/fife/extensions/pychan/widgets/animationicon.py
index df9d86579..f3e2ba879 100644
--- a/engine/python/fife/extensions/pychan/widgets/animationicon.py
+++ b/engine/python/fife/extensions/pychan/widgets/animationicon.py
@@ -190,7 +190,7 @@ def _setAnimation(self, anim):
 			if isinstance(anim, fife.Animation):
 				self._anim = anim
 			else:
-				if anim is not "":
+				if anim != "":
 					# use xml loader
 					self._anim = loadXMLAnimation(get_manager().hook.engine, anim)
 			self.real_widget.setAnimation(self._anim)
diff --git a/engine/python/fife/extensions/pychan/widgets/curvegraph.py b/engine/python/fife/extensions/pychan/widgets/curvegraph.py
index 9dbe32c9e..b5f199c8e 100644
--- a/engine/python/fife/extensions/pychan/widgets/curvegraph.py
+++ b/engine/python/fife/extensions/pychan/widgets/curvegraph.py
@@ -161,7 +161,7 @@ def _getOpaque(self): return self.real_widget.isOpaque()
 
 	def _setCoordinates(self, coordinates):
 		# reset
-		if coordinates is None or len(coordinates) is 0:
+		if coordinates is None or len(coordinates) == 0:
 			self.real_widget.resetPointVector()
 			return
 		# int list to point vector
diff --git a/engine/python/fife/extensions/pychan/widgets/linegraph.py b/engine/python/fife/extensions/pychan/widgets/linegraph.py
index 6f7fa43b1..d2e1d139d 100644
--- a/engine/python/fife/extensions/pychan/widgets/linegraph.py
+++ b/engine/python/fife/extensions/pychan/widgets/linegraph.py
@@ -154,7 +154,7 @@ def _getOpaque(self): return self.real_widget.isOpaque()
 
 	def _setCoordinates(self, coordinates):
 		# reset
-		if coordinates is None or len(coordinates) is 0:
+		if coordinates is None or len(coordinates) == 0:
 			self.real_widget.resetPointVector()
 			return
 		# int list to point vector
diff --git a/engine/python/fife/extensions/pychan/widgets/pointgraph.py b/engine/python/fife/extensions/pychan/widgets/pointgraph.py
index c03cb676b..3725d5c8e 100644
--- a/engine/python/fife/extensions/pychan/widgets/pointgraph.py
+++ b/engine/python/fife/extensions/pychan/widgets/pointgraph.py
@@ -154,7 +154,7 @@ def _getOpaque(self): return self.real_widget.isOpaque()
 
 	def _setCoordinates(self, coordinates):
 		# reset
-		if coordinates is None or len(coordinates) is 0:
+		if coordinates is None or len(coordinates) == 0:
 			self.real_widget.resetPointVector()
 			return
 		# int list to point vector
diff --git a/engine/python/fife/extensions/pychan/widgets/widget.py b/engine/python/fife/extensions/pychan/widgets/widget.py
index 3d3dc75e9..9b3dc17b7 100644
--- a/engine/python/fife/extensions/pychan/widgets/widget.py
+++ b/engine/python/fife/extensions/pychan/widgets/widget.py
@@ -1035,25 +1035,25 @@ def _setBorderSize(self, size):
 	def _setMargins(self, margin):
 		# Shorthand property
 		if isinstance(margin, tuple) or isinstance(margin, list):
-			if len(margin) is 4:
+			if len(margin) == 4:
 				# 0=top, 1=right, 2=bottom, 3=left
 				self.real_widget.setMarginTop(margin[0])
 				self.real_widget.setMarginRight(margin[1])
 				self.real_widget.setMarginBottom(margin[2])
 				self.real_widget.setMarginLeft(margin[3])
-			elif len(margin) is 3:
+			elif len(margin) == 3:
 				# 0=top, 1=right, 2=bottom, 1=left
 				self.real_widget.setMarginTop(margin[0])
 				self.real_widget.setMarginRight(margin[1])
 				self.real_widget.setMarginBottom(margin[2])
 				self.real_widget.setMarginLeft(margin[1])
-			elif len(margin) is 2:
+			elif len(margin) == 2:
 				# 0=top, 1=right, 0=bottom, 1=left
 				self.real_widget.setMarginTop(margin[0])
 				self.real_widget.setMarginRight(margin[1])
 				self.real_widget.setMarginBottom(margin[0])
 				self.real_widget.setMarginLeft(margin[1])
-			elif len(margin) is 1:
+			elif len(margin) == 1:
 				# 0=top, 0=right, 0=bottom, 0=left
 				self.real_widget.setMargin(margin[0])
 		else:
@@ -1065,25 +1065,25 @@ def _getMargins(self):
 	def _setPadding(self, padding):
 		# Shorthand property
 		if isinstance(padding, tuple) or isinstance(padding, list):
-			if len(padding) is 4:
+			if len(padding) == 4:
 				# 0=top, 1=right, 2=bottom, 3=left
 				self.real_widget.setPaddingTop(padding[0])
 				self.real_widget.setPaddingRight(padding[1])
 				self.real_widget.setPaddingBottom(padding[2])
 				self.real_widget.setPaddingLeft(padding[3])
-			elif len(padding) is 3:
+			elif len(padding) == 3:
 				# 0=top, 1=right, 2=bottom, 1=left
 				self.real_widget.setPaddingTop(padding[0])
 				self.real_widget.setPaddingRight(padding[1])
 				self.real_widget.setPaddingBottom(padding[2])
 				self.real_widget.setPaddingLeft(padding[1])
-			elif len(padding) is 2:
+			elif len(padding) == 2:
 				# 0=top, 1=right, 0=bottom, 1=left
 				self.real_widget.setPaddingTop(padding[0])
 				self.real_widget.setPaddingRight(padding[1])
 				self.real_widget.setPaddingBottom(padding[0])
 				self.real_widget.setPaddingLeft(padding[1])
-			elif len(padding) is 1:
+			elif len(padding) == 1:
 				# 0=top, 0=right, 0=bottom, 0=left
 				self.real_widget.setPadding(padding[0])
 		else:
